<!DOCTYPE html>
<html class="ocks-org do-not-copy">
<meta charset="utf-8">
<title>D3 + Leaflet</title>
<style>

@import url(//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.css);
@import url(../style.css?aea6f0a);

#map {
  width: 960px;
  height: 500px;
}

svg {
  position: relative;
}

path {
  fill: #000;
  fill-opacity: .2;
  stroke: #fff;
  stroke-width: 1.5px;
}

path:hover {
  fill: brown;
  fill-opacity: .7;
}

</style>

<p id="map">

<script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.5/leaflet.js"></script>
<script>

var map = new L.Map("map", {center: [37.8, -96.9], zoom: 4})
    .addLayer(new L.TileLayer("http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"));


var svg = d3.select(map.getPanes().overlayPane).append("svg"),
    g = svg.append("g").attr("class", "leaflet-zoom-hide");

d3.json("https://bost.ocks.org/mike/leaflet/us-states.json", function(error, collection) {
  if (error) throw error;

  var transform = d3.geo.transform({point: projectPoint}),
      path = d3.geo.path().projection(transform);

  var feature = g.selectAll("path")
      .data(collection.features)
    .enter().append("path");

  map.on("viewreset", reset);
  reset();



  // Reposition the SVG to cover the features.
  function reset() {
    var bounds = path.bounds(collection),
        topLeft = bounds[0],
        bottomRight = bounds[1];

    svg .attr("width", bottomRight[0] - topLeft[0])
        .attr("height", bottomRight[1] - topLeft[1])
        .style("left", topLeft[0] + "px")
        .style("top", topLeft[1] + "px");

    g   .attr("transform", "translate(" + -topLeft[0] + "," + -topLeft[1] + ")");

    feature.attr("d", path);



  }

  // Use Leaflet to implement a D3 geometric transformation.
  function projectPoint(x, y) {
    var point = map.latLngToLayerPoint(new L.LatLng(y, x));
    this.stream.point(point.x, point.y);
  }
  <% @events.each do |event| %>
    var marker = L.marker([<%= event.lat %>, <%= event.long %>]).addTo(map)
  <%end%>
});

</script>



<input id="address" class="typeahead" type="text" placeholder="Enter an address">

<h4>Reponse</h4>
<pre id="response">
</pre>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"></script>
 <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script>
 <script src="https://rawgithub.com/sgruhier/typeahead-addresspicker/master/bower_components/typeahead.js/dist/typeahead.bundle.js"></script>
 <script src="https://rawgithub.com/sgruhier/typeahead-addresspicker/master/dist/typeahead-addresspicker.js"></script>
 <script>
  $( function() {
    // instantiate the addressPicker suggestion engine (based on bloodhound)
    var addressPicker = new AddressPicker();

    // instantiate the typeahead UI
    $('#address').typeahead(null, {
      displayKey: 'description',
      source: addressPicker.ttAdapter()
    });
    addressPicker.bindDefaultTypeaheadEvent($('#address'))
    $(addressPicker).on('addresspicker:selected', function (event, result) {
      html = ["Address: " + result.address()]
      html.push("Latitude: " + result.lat())
      html.push("Longitude: " + result.lng())
      html.push("Long names:")
      result.addressTypes().forEach(function(type) {
        html.push("  " + type + ": " + result.nameForType(type))
      })
      html.push("Short names:")
      result.addressTypes().forEach(function(type) {
        html.push("  " + type + ": " + result.nameForType(type, true))
      })
      $('#response').html( html.join('\n'))
      //var marker = L.marker([result.lat(), result.lng()]).addTo(map) 
    })
  })

  </script>




   <br>
   <br>
   <br>

   <table>
  <thead>
    <tr>
      <th>Title</th>
      <th>Description</th>
      <th>Location</th>
      <th>Followers</th>
      <th>Interactions</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @events.each do |event| %>
      <tr>
        <td><%= event.title %></td>
        <td><%= event.description %></td>
        <% temp = event.lat %>
        <td> <%= temp %></td>
        <td><%= event.location %></td>
        <td><%= event.followers %></td>
        <td><%= event.interactions %></td>
        <td><%= link_to 'Show', event %></td>
        <td><%= link_to 'Edit', edit_event_path(event) %></td>
        <td><%= link_to 'Destroy', event, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>


<div id="markers">

</div>


